@model JobHub.DTOs.Ai.ResumeMatchDto
@{
    ViewData["Title"] = "Your Job Matches";
}
<!-- Latest Font Awesome CDN -->

<!-- Custom CSS for Results Page -->

<div class="resume-results-page">
    <div class="container">
        <!-- Header Section -->
        <div class="results-header">
            <div class="header-content">
                <h1>Your Personalized Job Matches</h1>
                <p class="subtitle">We've analyzed your resume and found opportunities that match your skills</p>

                <div class="success-badge">
                    <i class="fas fa-check-circle"></i>
                    <span>Resume Analysis Complete</span>
                </div>
            </div>
        </div>

        <!-- Summary Stats -->
        <div class="summary-stats">
            <div class="stat-item">
                <div class="stat-icon">
                    <i class="fas fa-briefcase"></i>
                </div>
                <div class="stat-data">
                    <span class="stat-number">@Model.MatchingJobs.Count</span>
                    <span class="stat-label">Job Matches</span>
                </div>
            </div>

            <div class="stat-item">
                <div class="stat-icon">
                    <i class="fas fa-star"></i>
                </div>
                <div class="stat-data">
                    <span class="stat-number">@Model.MatchScore%</span>
                    <span class="stat-label">Average Match</span>
                </div>
            </div>

            <div class="stat-item">
                <div class="stat-icon">
                    <i class="fas fa-code"></i>
                </div>
                <div class="stat-data">
                    <span class="stat-number">@Model.SkillsMatched</span>
                    <span class="stat-label">Skills Matched</span>
                </div>
            </div>

            <div class="stat-item">
                <div class="stat-icon">
                    <i class="fas fa-layer-group"></i>
                </div>
                <div class="stat-data">
                    <span class="stat-value">@Model.ExperienceMatched</span>
                    <span class="stat-label">Experience Level</span>
                </div>
            </div>
        </div>

        <!-- Main Results -->
        <div class="results-main">
            <div class="job-matches-list">
                @if (Model.MatchingJobs.Any())
                {
                    @foreach (var jobMatch in Model.MatchingJobs)
                    {
                        var job = jobMatch.JobPost;
                        <div class="job-match-card">
                            <div class="job-card-header">
                                <div class="company-info">
                                    <div class="company-logo">
                                        @if (!string.IsNullOrEmpty(job.ImageCompanyBase64))
                                        {
                                            <img src="data:@job.ImageCompanyType;base64,@job.ImageCompanyBase64" alt="@job.companyName logo">
                                        }
                                        else
                                        {
                                            <div class="logo-placeholder">@job.companyName?.Substring(0, 1)</div>
                                        }
                                    </div>
                                    <div class="company-details">
                                        <h3 class="job-title">@job.Title</h3>
                                        <p class="company-name">@job.companyName</p>
                                    </div>
                                </div>

                                <div class="job-match-score">
                                    <div class="score-display">
                                        <div class="score-circle" data-score="@jobMatch.MatchPercentage">
                                            <svg class="circle-chart" viewBox="0 0 36 36">
                                                <path class="circle-bg" d="M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831" />
                                                <path class="circle-fill" d="M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831" />
                                            </svg>
                                            <span class="score-value">@jobMatch.MatchPercentage%</span>
                                        </div>
                                        <span class="score-label">Match</span>
                                    </div>
                                </div>
                            </div>

                            <div class="job-card-details">
                                <div class="job-meta">
                                    <div class="meta-item">
                                        <i class="fas fa-map-marker-alt"></i>
                                        <span>@job.Location</span>
                                    </div>
                                    <div class="meta-item">
                                        <i class="fas fa-calendar-alt"></i>
                                        <span>Posted @job.PostedAt.ToString("MMM d, yyyy")</span>
                                    </div>
                                    <div class="meta-item">
                                        <i class="fas fa-clock"></i>
                                        <span>Full-time</span>
                                    </div>
                                </div>

                                <div class="skills-section">
                                    <h4>Matched Skills</h4>
                                    <div class="skills-tags">
                                        @foreach (var skill in jobMatch.MatchedSkills.Take(6))
                                        {
                                            <span class="skill-tag">@skill</span>
                                        }
                                        @if (jobMatch.MatchedSkills.Count > 6)
                                        {
                                            <span class="skill-tag more-skills">+@(jobMatch.MatchedSkills.Count - 6) more</span>
                                        }
                                    </div>
                                </div>

                                <div class="job-description">
                                    <p>@(job.Description.Length > 150 ? job.Description.Substring(0, 150) + "..." : job.Description)</p>
                                </div>
                            </div>

                            <div class="job-card-actions">
                                <a asp-action="JobPostDetails" asp-controller="Job" asp-route-Id="@job.Id" class="btn btn-primary">
                                    <i class="fas fa-eye"></i> View Job
                                </a>
                               
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="no-results">
                        <div class="no-results-icon">
                            <i class="fas fa-search"></i>
                        </div>
                        <h3>No Perfect Matches Yet</h3>
                        <p>We couldn't find any jobs that perfectly match your resume. Try optimizing your resume or broadening your search criteria.</p>
                        <div class="no-results-actions">
                            <button class="btn btn-primary">Optimize My Resume</button>
                            <button class="btn btn-outline">Browse All Jobs</button>
                        </div>
                    </div>
                }
            </div>

            <!-- Pagination (for future enhancement) -->
        @*     @if (Model.MatchingJobs.Count > 5)
            {
                <div class="pagination">
                    <button class="pagination-btn disabled">
                        <i class="fas fa-chevron-left"></i>
                    </button>
                    <button class="pagination-btn active">1</button>
                    <button class="pagination-btn">2</button>
                    <button class="pagination-btn">3</button>
                    <span class="pagination-ellipsis">...</span>
                    <button class="pagination-btn">10</button>
                    <button class="pagination-btn">
                        <i class="fas fa-chevron-right"></i>
                    </button>
                </div>
            }
        </div>

        <!-- Improve Section -->
        <div class="improve-section">
            <h3>Want to Improve Your Matches?</h3>
            <div class="improve-card">
                <i class="fas fa-magic"></i>
                <div>
                    <h4>AI Resume Builder</h4>
                    <p>Let our AI help you optimize your resume for better job matches</p>
                    <button class="btn-improve">Optimize My Resume</button>
                </div>
            </div>
        </div> *@
    </div>
</div>

@section Styles {
    <style>
        /* Enhanced CSS for Results Page */
        :root {
            --primary: #4361ee;
            --primary-dark: #3a56d4;
            --secondary: #ff6b6b;
            --success: #06d6a0;
            --warning: #ffd166;
            --dark: #2d3748;
            --light: #f8f9fa;
            --gray-100: #f7fafc;
            --gray-200: #edf2f7;
            --gray-300: #e2e8f0;
            --gray-400: #cbd5e0;
            --gray-500: #a0aec0;
            --gray-600: #718096;
            --gray-700: #4a5568;
            --gray-800: #2d3748;
            --gray-900: #1a202c;
            --shadow: 0 4px 6px rgba(0, 0, 0, 0.07);
            --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
            --radius: 8px;
            --transition: all 0.3s ease;
        }

        .resume-results-page {
            padding: 2rem 0;
            background-color: var(--gray-100);
            min-height: 100vh;
        }

        .container {
            max-width: 1000px;
            margin: 0 auto;
            padding: 0 1rem;
        }

        /* Header Styles */
        .results-header {
            background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
            color: white;
            border-radius: var(--radius);
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: var(--shadow-lg);
        }

        .header-content {
            display: flex;
            flex-direction: column;
            align-items: center;
            text-align: center;
        }

            .header-content h1 {
                font-size: 2.5rem;
                font-weight: 700;
                margin-bottom: 0.5rem;
            }

        .subtitle {
            font-size: 1.1rem;
            opacity: 0.9;
            margin-bottom: 1.5rem;
        }

        .success-badge {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            background: rgba(255, 255, 255, 0.2);
            padding: 0.5rem 1rem;
            border-radius: 50px;
            font-weight: 500;
        }

        /* Summary Stats */
        .summary-stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin-bottom: 2rem;
        }

        .stat-item {
            background: white;
            border-radius: var(--radius);
            padding: 1.5rem;
            display: flex;
            align-items: center;
            gap: 1rem;
            box-shadow: var(--shadow);
            transition: var(--transition);
        }

            .stat-item:hover {
                transform: translateY(-3px);
                box-shadow: var(--shadow-lg);
            }

        .stat-icon {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background: var(--gray-100);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
            color: var(--primary);
        }

        .stat-data {
            display: flex;
            flex-direction: column;
        }

        .stat-number {
            font-size: 1.8rem;
            font-weight: 700;
            color: var(--dark);
        }

        .stat-value {
            font-size: 1.4rem;
            font-weight: 700;
            color: var(--dark);
        }

        .stat-label {
            font-size: 0.9rem;
            color: var(--gray-600);
        }

        /* Main Results Area */
        .results-main {
            margin-bottom: 3rem;
        }

        /* Job Match Cards */
        .job-matches-list {
            display: flex;
            flex-direction: column;
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .job-match-card {
            background: white;
            border-radius: var(--radius);
            overflow: hidden;
            box-shadow: var(--shadow);
            transition: var(--transition);
        }

            .job-match-card:hover {
                transform: translateY(-3px);
                box-shadow: var(--shadow-lg);
            }

        .job-card-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            padding: 1.5rem;
            border-bottom: 1px solid var(--gray-200);
        }

        .company-info {
            display: flex;
            align-items: flex-start;
            gap: 1rem;
        }

        .company-logo {
            width: 50px;
            height: 50px;
            flex-shrink: 0;
        }

            .company-logo img {
                width: 100%;
                height: 100%;
                object-fit: cover;
                border-radius: 8px;
            }

        .logo-placeholder {
            width: 100%;
            height: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
            background: var(--primary);
            color: white;
            font-weight: bold;
            border-radius: 8px;
        }

        .company-details {
            display: flex;
            flex-direction: column;
        }

        .job-title {
            font-size: 1.2rem;
            font-weight: 600;
            color: var(--gray-800);
            margin-bottom: 0.25rem;
        }

        .company-name {
            color: var(--gray-600);
            font-size: 0.9rem;
        }

        .job-match-score {
            display: flex;
            flex-direction: column;
            align-items: flex-end;
        }

        .score-display {
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .score-circle {
            position: relative;
            width: 60px;
            height: 60px;
            margin-bottom: 0.5rem;
        }

        .circle-chart {
            width: 60px;
            height: 60px;
        }

        .circle-bg {
            fill: none;
            stroke: var(--gray-200);
            stroke-width: 3;
        }

        .circle-fill {
            fill: none;
            stroke: var(--success);
            stroke-width: 3;
            stroke-linecap: round;
            transform: rotate(-90deg);
            transform-origin: 50% 50%;
        }

        .score-value {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            font-size: 1rem;
            font-weight: 700;
        }

        .score-label {
            font-size: 0.8rem;
            color: var(--gray-600);
        }

        .job-card-details {
            padding: 1.5rem;
        }

        .job-meta {
            display: flex;
            flex-wrap: wrap;
            gap: 1rem;
            margin-bottom: 1.5rem;
        }

        .meta-item {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 0.9rem;
            color: var(--gray-600);
        }

        .skills-section {
            margin-bottom: 1.5rem;
        }

            .skills-section h4 {
                font-size: 1rem;
                margin-bottom: 0.75rem;
                color: var(--gray-700);
            }

        .skills-tags {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
        }

        .skill-tag {
            padding: 0.4rem 0.8rem;
            background: var(--gray-100);
            border-radius: 50px;
            font-size: 0.85rem;
            color: var(--gray-700);
        }

        .more-skills {
            background: var(--primary);
            color: white;
        }

        .job-description {
            margin-bottom: 1.5rem;
        }

            .job-description p {
                color: var(--gray-600);
                line-height: 1.6;
            }

        .job-card-actions {
            display: flex;
            gap: 0.75rem;
            padding: 0 1.5rem 1.5rem;
        }

        .btn {
            padding: 0.6rem 1.2rem;
            border-radius: var(--radius);
            font-weight: 500;
            cursor: pointer;
            transition: var(--transition);
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            text-decoration: none;
        }

        .btn-primary {
            background: var(--primary);
            color: white;
            border: none;
        }

            .btn-primary:hover {
                background: var(--primary-dark);
            }

        .btn-secondary {
            background: white;
            color: var(--gray-700);
            border: 1px solid var(--gray-300);
        }

            .btn-secondary:hover {
                background: var(--gray-100);
            }

        .btn-link {
            background: transparent;
            color: var(--primary);
            border: none;
        }

            .btn-link:hover {
                text-decoration: underline;
            }

        /* No Results State */
        .no-results {
            text-align: center;
            padding: 3rem;
            background: white;
            border-radius: var(--radius);
            box-shadow: var(--shadow);
        }

        .no-results-icon {
            font-size: 3rem;
            color: var(--gray-300);
            margin-bottom: 1.5rem;
        }

        .no-results h3 {
            font-size: 1.5rem;
            margin-bottom: 1rem;
            color: var(--gray-700);
        }

        .no-results p {
            color: var(--gray-600);
            margin-bottom: 2rem;
            max-width: 500px;
            margin-left: auto;
            margin-right: auto;
        }

        .no-results-actions {
            display: flex;
            gap: 1rem;
            justify-content: center;
        }

        .btn-outline {
            background: white;
            color: var(--primary);
            border: 1px solid var(--primary);
        }

            .btn-outline:hover {
                background: var(--primary);
                color: white;
            }

        /* Pagination */
        .pagination {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 0.5rem;
            margin-top: 1rem;
        }

        .pagination-btn {
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            border: 1px solid var(--gray-300);
            border-radius: var(--radius);
            background: white;
            cursor: pointer;
        }

            .pagination-btn.active {
                background: var(--primary);
                color: white;
                border-color: var(--primary);
            }

            .pagination-btn.disabled {
                opacity: 0.5;
                cursor: not-allowed;
            }

        .pagination-ellipsis {
            padding: 0 0.5rem;
        }

        /* Improve Section */
        .improve-section {
            margin-top: 3rem;
            text-align: center;
        }

            .improve-section h3 {
                font-size: 1.8rem;
                margin-bottom: 1.5rem;
                color: var(--gray-800);
            }

        .improve-card {
            background: white;
            border-radius: var(--radius);
            padding: 2rem;
            box-shadow: var(--shadow);
            display: flex;
            align-items: center;
            gap: 1.5rem;
            text-align: left;
            max-width: 800px;
            margin: 0 auto;
        }

            .improve-card i {
                font-size: 3rem;
                color: var(--primary);
            }

            .improve-card h4 {
                font-size: 1.3rem;
                margin-bottom: 0.5rem;
                color: var(--gray-800);
            }

            .improve-card p {
                color: var(--gray-600);
                margin-bottom: 1.5rem;
            }

        .btn-improve {
            background: var(--success);
            color: white;
            border: none;
            padding: 0.8rem 1.5rem;
            border-radius: var(--radius);
            font-weight: 600;
            cursor: pointer;
            transition: var(--transition);
        }

            .btn-improve:hover {
                background: #05b387;
            }

        /* Responsive Design */
        media (max-width: 768px) {
            .summary-stats

        {
            grid-template-columns: repeat(2, 1fr);
        }

        .job-card-header {
            flex-direction: column;
            gap: 1rem;
        }

        .job-match-score {
            align-items: flex-start;
        }

        .job-card-actions {
            flex-direction: column;
        }

        .no-results-actions {
            flex-direction: column;
        }

        .improve-card {
            flex-direction: column;
            text-align: center;
        }

        }

        media (max-width: 576px) {
            .results-header

        {
            padding: 1.5rem;
        }

        .header-content h1 {
            font-size: 2rem;
        }

        .summary-stats {
            grid-template-columns: 1fr;
        }

        .job-meta {
            flex-direction: column;
            align-items: flex-start;
            gap: 0.75rem;
        }

        }
    </style>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Animate match scores
            document.querySelectorAll('.score-circle').forEach(circle => {
                const score = parseInt(circle.dataset.score);
                const circumference = 2 * Math.PI * 15.9155;
                const offset = circumference - (score / 100) * circumference;

                const fill = circle.querySelector('.circle-fill');
                fill.style.strokeDasharray = circumference;
                fill.style.strokeDashoffset = offset;

                // Set color based on score
                if (score < 40) {
                    fill.style.stroke = '#ff6b6b'; // danger color
                } else if (score < 70) {
                    fill.style.stroke = '#ffd166'; // warning color
                } else {
                    fill.style.stroke = '#06d6a0'; // success color
                }
            });

            // Save job functionality
            document.querySelectorAll('.save-job-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    const jobId = this.getAttribute('data-job-id');
                    const isSaved = this.classList.contains('saved');

                    fetch(isSaved ? '/Jobs/Unsave/' + jobId : '/Jobs/Save/' + jobId, {
                        method: 'POST',
                        headers: {
                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                        }
                    })
                    .then(response => {
                        if (response.ok) {
                            this.classList.toggle('saved');
                            const icon = this.querySelector('i');
                            if (this.classList.contains('saved')) {
                                icon.classList.remove('far');
                                icon.classList.add('fas');
                                this.innerHTML = '<i class="fas fa-bookmark"></i> Saved';
                            } else {
                                icon.classList.remove('fas');
                                icon.classList.add('far');
                                this.innerHTML = '<i class="far fa-bookmark"></i> Save';
                            }
                        }
                    });
                });
            });

            // Quick apply functionality
            document.querySelectorAll('.quick-apply-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    const jobCard = this.closest('.job-match-card');
                    const jobId = jobCard.querySelector('.save-job-btn').getAttribute('data-job-id');

                    // Show a quick apply modal or redirect to application page
                    alert('Quick apply functionality would open for job ID: ' + jobId);
                });
            });

            // Optimize resume button
            document.querySelector('.btn-improve').addEventListener('click', function() {
                window.location.href = '/Resume/Optimize';
            });
        });
    </script>
}