
<style>
    /* Base Styles */
    :root {
        --primary-color: #3498db;
        --primary-dark: #2980b9;
        --secondary-color: #2ecc71;
        --dark-color: #2c3e50;
        --light-color: #ecf0f1;
        --gray-color: #95a5a6;
        --light-gray: #e0e0e0;
        --danger-color: #e74c3c;
        --warning-color: #f39c12;
        --success-color: #2ecc71;
        --box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        --transition: all 0.3s ease;
    }

    .resume-upload-page {
        padding: 40px 0;
        background-color: #f5f7fa;
        min-height: 100vh;
    }

    .container {
        width: 100%;
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 20px;
    }

    /* Upload Section */
    .upload-section {
        text-align: center;
        max-width: 800px;
        margin: 0 auto 40px;
    }

        .upload-section h1 {
            font-size: 2.2rem;
            color: var(--dark-color);
            margin-bottom: 15px;
        }

    .subtitle {
        font-size: 1.1rem;
        color: var(--gray-color);
        margin-bottom: 30px;
    }

    .upload-card {
        background: white;
        border-radius: 10px;
        box-shadow: var(--box-shadow);
        padding: 40px;
        margin-bottom: 30px;
    }

    .upload-area {
        border: 2px dashed var(--light-gray);
        border-radius: 8px;
        padding: 40px 20px;
        cursor: pointer;
        transition: var(--transition);
    }

        .upload-area:hover {
            border-color: var(--primary-color);
        }

        .upload-area i {
            color: var(--primary-color);
            margin-bottom: 15px;
        }

        .upload-area h3 {
            font-size: 1.3rem;
            color: var(--dark-color);
            margin-bottom: 10px;
        }

        .upload-area p {
            color: var(--gray-color);
            margin: 10px 0;
        }

    .btn-browse {
        background-color: var(--primary-color);
        color: white;
        border: none;
        padding: 12px 25px;
        border-radius: 5px;
        font-size: 1rem;
        cursor: pointer;
        transition: var(--transition);
    }

        .btn-browse:hover {
            background-color: var(--primary-dark);
        }

    .file-types {
        font-size: 0.9rem;
        color: var(--gray-color);
    }

    /* Processing Section */
    .processing-section {
        text-align: center;
        padding: 30px;
    }

    .spinner {
        width: 50px;
        height: 50px;
        border: 5px solid rgba(52, 152, 219, 0.2);
        border-radius: 50%;
        border-top-color: var(--primary-color);
        animation: spin 1s ease-in-out infinite;
        margin: 0 auto 20px;
    }

    keyframes spin {
        to

    {
        transform: rotate(360deg);
    }

    }

    .processing-section h3 {
        font-size: 1.3rem;
        color: var(--dark-color);
        margin-bottom: 10px;
    }

    .processing-section p {
        color: var(--gray-color);
    }

    /* Tips Section */
    .tips-section {
        background: white;
        border-radius: 10px;
        box-shadow: var(--box-shadow);
        padding: 25px;
        text-align: left;
    }

        .tips-section h3 {
            font-size: 1.2rem;
            color: var(--dark-color);
            margin-bottom: 15px;
            text-align: center;
        }

        .tips-section ul {
            list-style: none;
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 15px;
        }

        .tips-section li {
            display: flex;
            align-items: center;
            gap: 10px;
            color: var(--dark-color);
        }

        .tips-section i {
            color: var(--success-color);
        }

    /* Results Section */
    .results-section {
        margin-top: 40px;
    }

        .results-section h2 {
            font-size: 1.8rem;
            color: var(--dark-color);
            text-align: center;
            margin-bottom: 10px;
        }

    .match-summary {
        text-align: center;
        color: var(--gray-color);
        margin-bottom: 30px;
        font-size: 1.1rem;
    }

    /* Match Stats */
    .match-stats {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    .stat-card {
        background: white;
        border-radius: 8px;
        box-shadow: var(--box-shadow);
        padding: 20px;
        display: flex;
        align-items: center;
        gap: 15px;
    }

        .stat-card i {
            font-size: 1.8rem;
            color: var(--primary-color);
        }

    .stat-value {
        display: block;
        font-size: 1.5rem;
        font-weight: 700;
        color: var(--dark-color);
    }

    .stat-label {
        font-size: 0.9rem;
        color: var(--gray-color);
    }

    /* Job Matches */
    .job-matches {
        display: flex;
        flex-direction: column;
        gap: 20px;
        margin-bottom: 40px;
    }

    .match-card {
        background: white;
        border-radius: 10px;
        box-shadow: var(--box-shadow);
        overflow: hidden;
    }

    .match-header {
        display: flex;
        padding: 20px;
        gap: 20px;
        align-items: center;
        border-bottom: 1px solid var(--light-gray);
    }

    .company-logo {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        background-color: var(--light-color);
        display: flex;
        align-items: center;
        justify-content: center;
        color: var(--primary-color);
        font-weight: bold;
        font-size: 1.5rem;
        flex-shrink: 0;
    }

        .company-logo img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 50%;
        }

    .match-info {
        flex-grow: 1;
    }

        .match-info h3 {
            font-size: 1.2rem;
            color: var(--dark-color);
            margin-bottom: 5px;
        }

        .match-info .company {
            color: var(--gray-color);
            font-size: 0.9rem;
            margin-bottom: 8px;
        }

    .match-meta {
        display: flex;
        gap: 15px;
        font-size: 0.85rem;
        color: var(--gray-color);
    }

        .match-meta i {
            margin-right: 5px;
        }

    .match-score {
        text-align: center;
        min-width: 80px;
    }

    .score-circle {
        position: relative;
        width: 60px;
        height: 60px;
        margin: 0 auto 5px;
    }

    .circle-chart {
        width: 60px;
        height: 60px;
    }

    .circle-bg {
        fill: none;
        stroke: var(--light-gray);
        stroke-width: 3;
    }

    .circle-fill {
        fill: none;
        stroke: var(--success-color);
        stroke-width: 3;
        stroke-linecap: round;
        animation: circle-fill-animation 1s ease-in-out forwards;
    }

    keyframes circle-fill-animation {
        0%

    {
        stroke-dasharray: 0, 100;
    }

    }

    .score-value {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        font-size: 1rem;
        font-weight: bold;
        color: var(--dark-color);
    }

    .score-label {
        font-size: 0.8rem;
        color: var(--gray-color);
    }

    .match-details {
        padding: 20px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 20px;
    }

    .skills-match h4 {
        font-size: 0.9rem;
        color: var(--gray-color);
        margin-bottom: 10px;
    }

    .matched-skills {
        display: flex;
        flex-wrap: wrap;
        gap: 8px;
    }

    .skill-tag {
        background-color: var(--light-color);
        color: var(--dark-color);
        padding: 5px 10px;
        border-radius: 20px;
        font-size: 0.8rem;
    }

    .match-actions {
        display: flex;
        gap: 10px;
    }

    .btn-view {
        background-color: var(--primary-color);
        color: white;
        padding: 8px 20px;
        border-radius: 5px;
        text-decoration: none;
        font-size: 0.9rem;
        transition: var(--transition);
    }

        .btn-view:hover {
            background-color: var(--primary-dark);
        }

    .btn-save {
        background-color: white;
        color: var(--dark-color);
        padding: 8px 15px;
        border: 1px solid var(--light-gray);
        border-radius: 5px;
        cursor: pointer;
        transition: var(--transition);
        display: flex;
        align-items: center;
        gap: 5px;
    }

        .btn-save:hover {
            background-color: var(--light-color);
        }

    /* Improve Section */
    .improve-section {
        margin-top: 40px;
    }

        .improve-section h3 {
            text-align: center;
            font-size: 1.4rem;
            color: var(--dark-color);
            margin-bottom: 20px;
        }

    .improve-card {
        background: white;
        border-radius: 10px;
        box-shadow: var(--box-shadow);
        padding: 25px;
        display: flex;
        align-items: center;
        gap: 20px;
        max-width: 600px;
        margin: 0 auto;
    }

        .improve-card i {
            font-size: 2rem;
            color: var(--primary-color);
        }

        .improve-card h4 {
            font-size: 1.2rem;
            color: var(--dark-color);
            margin-bottom: 5px;
        }

        .improve-card p {
            color: var(--gray-color);
            margin-bottom: 15px;
        }

    .btn-improve {
        background-color: var(--secondary-color);
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        font-weight: 600;
        cursor: pointer;
        transition: var(--transition);
    }

        .btn-improve:hover {
            background-color: #27ae60;
        }

    /* Responsive Design */
    media (max-width: 768px) {
        .upload-section h1

    {
        font-size: 1.8rem;
    }

    .upload-card {
        padding: 25px 15px;
    }

    .match-header {
        flex-direction: column;
        text-align: center;
    }

    .match-info {
        text-align: center;
    }

    .match-meta {
        justify-content: center;
    }

    .match-details {
        flex-direction: column;
        align-items: stretch;
    }

    .match-actions {
        justify-content: center;
    }

    .improve-card {
        flex-direction: column;
        text-align: center;
    }

    }

    media (max-width: 576px) {
        .upload-section h1

    {
        font-size: 1.6rem;
    }

    .subtitle {
        font-size: 1rem;
    }

    .tips-section ul {
        grid-template-columns: 1fr;
    }

    .match-stats {
        grid-template-columns: 1fr;
    }

    }
</style>
<div class="resume-upload-page">
    <div class="container">
        <div class="resume-upload-container">
            <div class="upload-section">
                <h1>Find Your Perfect Job Match</h1>
                <p class="subtitle">Upload your resume and our AI will analyze it to find the best matching jobs for you</p>

                <div class="upload-card">
                    <div class="upload-area" id="dropZone">
                        <i class="fas fa-cloud-upload-alt fa-3x"></i>
                        <h3>Drag & Drop Your Resume Here</h3>
                        <p>or</p>
                        <button class="btn-browse">Browse Files</button>
                        <input type="file" id="resumeUpload" accept=".pdf,.doc,.docx,.txt" style="display: none;">
                        <p class="file-types">Supported formats: PDF, DOC, DOCX, TXT</p>
                    </div>

                    <div class="processing-section" style="display: none;">
                        <div class="spinner"></div>
                        <h3>Analyzing your resume...</h3>
                        <p>Our AI is scanning your skills and experience to find the best matches</p>
                    </div>
                </div>

                <div class="tips-section">
                    <h3>Tips for Better Matches</h3>
                    <ul>
                        <li><i class="fas fa-check-circle"></i> Ensure your resume includes relevant skills</li>
                        <li><i class="fas fa-check-circle"></i> List your work experience with clear job titles</li>
                        <li><i class="fas fa-check-circle"></i> Include education and certifications</li>
                        <li><i class="fas fa-check-circle"></i> Keep your resume updated</li>
                    </ul>
                </div>
            </div>

            <div class="results-section" style="@(Model == null ? "display: none;" : "")">
                <h2>Your Best Job Matches</h2>
                <p class="match-summary">Based on your resume, we found <strong>@Model?.MatchingJobs.Count</strong> jobs that match your skills and experience</p>

                <div class="match-stats">
                    <div class="stat-card">
                        <i class="fas fa-star"></i>
                        <div>
                            <span class="stat-value">@Model?.MatchScore%</span>
                            <span class="stat-label">Overall Match</span>
                        </div>
                    </div>
                    <div class="stat-card">
                        <i class="fas fa-code"></i>
                        <div>
                            <span class="stat-value">@Model?.SkillsMatched</span>
                            <span class="stat-label">Skills Matched</span>
                        </div>
                    </div>
                    <div class="stat-card">
                        <i class="fas fa-briefcase"></i>
                        <div>
                            <span class="stat-value">@Model?.ExperienceMatched</span>
                            <span class="stat-label">Experience Level</span>
                        </div>
                    </div>
                </div>

                <div class="job-matches">
                    @if (Model != null)
                    {
                        @foreach (var job in Model.MatchingJobs)
                        {
                            <div class="match-card">
                                <div class="match-header">
                                    <div class="company-logo">
                                        @if (!string.IsNullOrEmpty(job.ImageCompanyBase64))
                                        {
                                            <img src="data:@job.ImageCompanyType;base64,@job.ImageCompanyBase64" alt="@job.companyName logo">
                                        }
                                        else
                                        {
                                            <span>@job.companyName?.Substring(0, 1)</span>
                                        }
                                    </div>
                                    <div class="match-info">
                                        <h3>@job.Title</h3>
                                        <p class="company">@job.companyName</p>
                                        <div class="match-meta">
                                            <span><i class="fas fa-map-marker-alt"></i> @job.Location</span>
                                            <span><i class="fas fa-calendar-alt"></i> @job.PostedAt.ToShortDateString()</span>
                                        </div>
                                    </div>
                                    <div class="match-score">
                                        <div class="score-circle" data-score="@job.MatchPercentage">
                                            <svg class="circle-chart" viewBox="0 0 36 36">
                                                <path class="circle-bg" d="M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831" />
                                                <path class="circle-fill" d="M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831" />
                                            </svg>
                                            <span class="score-value">@job.MatchPercentage%</span>
                                        </div>
                                        <span class="score-label">Match</span>
                                    </div>
                                </div>
                                <div class="match-details">
                                    <div class="skills-match">
                                        <h4>Matched Skills</h4>
                                        <div class="matched-skills">
                                            @foreach (var skill in job.MatchedSkills.Take(5))
                                            {
                                                <span class="skill-tag">@skill</span>
                                            }
                                            @if (job.MatchedSkills.Count > 5)
                                            {
                                                <span class="skill-tag">+@(job.MatchedSkills.Count - 5)</span>
                                            }
                                        </div>
                                    </div>
                                    <div class="match-actions">
                                        <a href="/Jobs/Details/@job.Id" class="btn-view">View Job</a>
                                        <button class="btn-save">
                                            <i class="far fa-bookmark"></i> Save
                                        </button>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>

                <div class="improve-section">
                    <h3>Want to Improve Your Matches?</h3>
                    <div class="improve-card">
                        <i class="fas fa-magic"></i>
                        <div>
                            <h4>AI Resume Builder</h4>
                            <p>Let our AI help you optimize your resume for better job matches</p>
                            <button class="btn-improve">Optimize My Resume</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<script>
    document.addEventListener('DOMContentLoaded', function() {
        const dropZone = document.getElementById('dropZone');
        const fileInput = document.getElementById('resumeUpload');
        const uploadArea = document.querySelector('.upload-area');
        const processingSection = document.querySelector('.processing-section');

        // Click to browse files
        dropZone.addEventListener('click', function() {
            fileInput.click();
        });

        // Browse button
        document.querySelector('.btn-browse').addEventListener('click', function(e) {
            e.stopPropagation();
            fileInput.click();
        });

        // File input change
        fileInput.addEventListener('change', function() {
            if (this.files.length > 0) {
                handleFileUpload(this.files[0]);
            }
        });

        // Drag and drop events
        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
            dropZone.addEventListener(eventName, preventDefaults, false);
        });

        function preventDefaults(e) {
            e.preventDefault();
            e.stopPropagation();
        }

        ['dragenter', 'dragover'].forEach(eventName => {
            dropZone.addEventListener(eventName, highlight, false);
        });

        ['dragleave', 'drop'].forEach(eventName => {
            dropZone.addEventListener(eventName, unhighlight, false);
        });

        function highlight() {
            uploadArea.classList.add('highlight');
        }

        function unhighlight() {
            uploadArea.classList.remove('highlight');
        }

        dropZone.addEventListener('drop', function(e) {
            const dt = e.dataTransfer;
            const file = dt.files[0];
            handleFileUpload(file);
        });

        // Handle file upload
        function handleFileUpload(file) {
            // Check file type
            const validTypes = ['application/pdf', 'application/msword',
                               'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
                               'text/plain'];
            if (!validTypes.includes(file.type)) {
                alert('Please upload a valid file type (PDF, DOC, DOCX, or TXT)');
                return;
            }

            // Check file size (5MB max)
            if (file.size > 5 * 1024 * 1024) {
                alert('File size should not exceed 5MB');
                return;
            }

            // Show processing state
            uploadArea.style.display = 'none';
            processingSection.style.display = 'block';

            // Simulate processing (in a real app, you would upload to server)
            setTimeout(() => {
                // Here you would actually upload the file to your server
                // and process it with your AI, then show results

                // For demo purposes, we'll just show the results section
                processingSection.style.display = 'none';
                document.querySelector('.results-section').style.display = 'block';

                // Scroll to results
                document.querySelector('.results-section').scrollIntoView({
                    behavior: 'smooth'
                });

                // Animate match scores
                document.querySelectorAll('.score-circle').forEach(circle => {
                    const score = parseInt(circle.dataset.score);
                    const circumference = 2 * Math.PI * 15.9155;
                    const offset = circumference - (score / 100) * circumference;

                    const fill = circle.querySelector('.circle-fill');
                    fill.style.strokeDasharray = circumference;
                    fill.style.strokeDashoffset = offset;

                    // Set color based on score
                    if (score < 40) {
                        fill.style.stroke = 'var(--danger-color)';
                    } else if (score < 70) {
                        fill.style.stroke = 'var(--warning-color)';
                    } else {
                        fill.style.stroke = 'var(--success-color)';
                    }
                });
            }, 3000);
        }

        // Save job functionality
        document.querySelectorAll('.btn-save').forEach(btn => {
            btn.addEventListener('click', function() {
                this.classList.toggle('saved');
                const icon = this.querySelector('i');
                if (this.classList.contains('saved')) {
                    icon.classList.remove('far');
                    icon.classList.add('fas');
                    icon.style.color = 'var(--danger-color)';
                } else {
                    icon.classList.remove('fas');
                    icon.classList.add('far');
                    icon.style.color = '';
                }
            });
        });
    });
</script>